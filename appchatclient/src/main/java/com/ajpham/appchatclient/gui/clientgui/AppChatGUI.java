/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ajpham.appchatclient.gui.clientgui;

//import com.ajpham.appchatclient.dto.UserDTO;
import com.ajpham.appchatclient.dto.ChannelDTO;
import com.ajpham.appchatclient.dto.MessageDTO;
import com.ajpham.appchatclient.dto.RequestDTO;
import com.ajpham.appchatclient.dto.UserDTO;
import com.ajpham.appchatclient.nettyclient.NettyClient;
import com.ajpham.appchatclient.service.ServiceChannel;
import com.ajpham.appchatclient.service.ServiceMessage;
import com.ajpham.appchatclient.service.ServiceUser;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Enumeration;
import java.util.LinkedHashSet;
import java.util.concurrent.ConcurrentHashMap;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.border.Border;

/**
 *
 * @author taipham
 */
public class AppChatGUI extends javax.swing.JFrame {

    /**
     * Creates new form AppChatGUI
     */
//    private static UserDTO _userDTO;
    private RequestDTO.Request _msgRequest;
    private DefaultListModel<ChannelDTO> _listsChannelModel;
    private SimpleDateFormat _simpleDateFormat;
    private static NettyClient _nettyClient;
    private static String _token;
    private static UserDTO _userDTO;
    private static String _channelNameActicve;
    private static ConcurrentHashMap<String, ChannelDTO> _mapChannel; //<channelName, channelDTO>
    private static ConcurrentHashMap<String, LinkedHashSet<MessageDTO>> _mapChannelMessage; //<channelName, list message>
    private static ServiceUser _serviceUser;
    private static ServiceMessage _serviceMessage;
    private static ServiceChannel _serviceChannel;
    final private static String pattern = "dd-MM-yyyy HH:mm:ss";

    public AppChatGUI() {

    }

    AppChatGUI(NettyClient nettyClient, UserDTO user, String token) {
        initComponents();
        _listsChannelModel = new DefaultListModel<>();
        _nettyClient = nettyClient;
        _nettyClient.getHandler().setAppChatGUI(this);
        _userDTO = user;
        _token = token;
        this.init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        pnMain = new javax.swing.JPanel();
        pnSiderbarLeft = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listChannel = new javax.swing.JList<>();
        pnSetting = new javax.swing.JPanel();
        lbCreateRoom = new javax.swing.JLabel();
        lbLogOut = new javax.swing.JLabel();
        lbAvatarUser = new javax.swing.JLabel();
        lbNameApp = new javax.swing.JPanel();
        tfFindRoom = new javax.swing.JTextField();
        lbUserName = new javax.swing.JLabel();
        lbFindRoom = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pnInfoFriendChat = new javax.swing.JPanel();
        lbChannelChat = new javax.swing.JLabel();
        lbAvatarChannelChat = new javax.swing.JLabel();
        lbMiniWindow = new javax.swing.JLabel();
        lbExit = new javax.swing.JLabel();
        pnManageMessChat = new javax.swing.JPanel();
        pnContainMessChat = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        taViewMesage = new javax.swing.JTextArea();
        pnManageTypeChat = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taInputMessage = new javax.swing.JTextArea();
        lbSent = new javax.swing.JLabel();
        pnTitleMessenger = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnMain.setBackground(new java.awt.Color(255, 255, 255));

        pnSiderbarLeft.setBackground(new java.awt.Color(255, 255, 255));
        pnSiderbarLeft.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        pnSiderbarLeft.setPreferredSize(new java.awt.Dimension(2, 693));
        pnSiderbarLeft.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        listChannel.setBackground(new java.awt.Color(255, 255, 255));
        listChannel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listChannelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listChannel);

        pnSiderbarLeft.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pnSetting.setBackground(new java.awt.Color(51, 204, 255));

        lbCreateRoom.setBackground(new java.awt.Color(255, 255, 255));
        lbCreateRoom.setForeground(new java.awt.Color(255, 255, 255));
        lbCreateRoom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCreateRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgcreatroom.png"))); // NOI18N
        lbCreateRoom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbCreateRoom.setPreferredSize(new java.awt.Dimension(65, 65));
        lbCreateRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbCreateRoomMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbCreateRoomMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbCreateRoomMouseEntered(evt);
            }
        });

        lbLogOut.setBackground(new java.awt.Color(255, 255, 255));
        lbLogOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgsignout.png"))); // NOI18N
        lbLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbLogOutMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbLogOutMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbLogOutMouseEntered(evt);
            }
        });

        lbAvatarUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAvatarUser.setText("Avatar");
        lbAvatarUser.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbAvatarUser.setPreferredSize(new java.awt.Dimension(65, 65));

        javax.swing.GroupLayout pnSettingLayout = new javax.swing.GroupLayout(pnSetting);
        pnSetting.setLayout(pnSettingLayout);
        pnSettingLayout.setHorizontalGroup(
            pnSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbCreateRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbLogOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAvatarUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnSettingLayout.setVerticalGroup(
            pnSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbAvatarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(lbCreateRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lbNameApp.setBackground(new java.awt.Color(255, 255, 255));
        lbNameApp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        tfFindRoom.setBackground(new java.awt.Color(255, 255, 255));
        tfFindRoom.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        tfFindRoom.setForeground(new java.awt.Color(0, 0, 0));
        tfFindRoom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 255), 2));
        tfFindRoom.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tfFindRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFindRoomActionPerformed(evt);
            }
        });
        tfFindRoom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfFindRoomKeyPressed(evt);
            }
        });

        lbUserName.setBackground(new java.awt.Color(255, 255, 255));
        lbUserName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbUserName.setForeground(new java.awt.Color(0, 0, 0));

        lbFindRoom.setBackground(new java.awt.Color(255, 255, 255));
        lbFindRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconsearch.png"))); // NOI18N
        lbFindRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFindRoomMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbFindRoomMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbFindRoomMouseEntered(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("SMILE ALO -");

        javax.swing.GroupLayout lbNameAppLayout = new javax.swing.GroupLayout(lbNameApp);
        lbNameApp.setLayout(lbNameAppLayout);
        lbNameAppLayout.setHorizontalGroup(
            lbNameAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lbNameAppLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(lbNameAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(lbNameAppLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(lbNameAppLayout.createSequentialGroup()
                        .addComponent(tfFindRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbFindRoom)))
                .addGap(10, 10, 10))
        );
        lbNameAppLayout.setVerticalGroup(
            lbNameAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lbNameAppLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(lbNameAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(lbNameAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbFindRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(tfFindRoom))
                .addGap(12, 12, 12))
        );

        pnInfoFriendChat.setBackground(new java.awt.Color(255, 255, 255));
        pnInfoFriendChat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        lbChannelChat.setBackground(new java.awt.Color(255, 255, 255));
        lbChannelChat.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        lbChannelChat.setForeground(new java.awt.Color(0, 0, 0));

        lbAvatarChannelChat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbAvatarChannelChat.setPreferredSize(new java.awt.Dimension(85, 85));

        lbMiniWindow.setBackground(new java.awt.Color(255, 255, 255));
        lbMiniWindow.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMiniWindow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgmini.png"))); // NOI18N
        lbMiniWindow.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lbMiniWindow.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbMiniWindow.setPreferredSize(new java.awt.Dimension(32, 32));
        lbMiniWindow.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lbMiniWindow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbMiniWindowMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbMiniWindowMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbMiniWindowMouseEntered(evt);
            }
        });

        lbExit.setBackground(new java.awt.Color(255, 255, 255));
        lbExit.setForeground(new java.awt.Color(255, 255, 255));
        lbExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgexit.png"))); // NOI18N
        lbExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbExit.setPreferredSize(new java.awt.Dimension(32, 32));
        lbExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbExitMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbExitMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbExitMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout pnInfoFriendChatLayout = new javax.swing.GroupLayout(pnInfoFriendChat);
        pnInfoFriendChat.setLayout(pnInfoFriendChatLayout);
        pnInfoFriendChatLayout.setHorizontalGroup(
            pnInfoFriendChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfoFriendChatLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lbAvatarChannelChat, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnInfoFriendChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnInfoFriendChatLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbMiniWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(pnInfoFriendChatLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbChannelChat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnInfoFriendChatLayout.setVerticalGroup(
            pnInfoFriendChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfoFriendChatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnInfoFriendChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAvatarChannelChat, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnInfoFriendChatLayout.createSequentialGroup()
                        .addGroup(pnInfoFriendChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbMiniWindow, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(lbExit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(lbChannelChat, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnManageMessChat.setBackground(new java.awt.Color(255, 255, 255));

        pnContainMessChat.setBackground(new java.awt.Color(255, 255, 255));
        pnContainMessChat.setForeground(new java.awt.Color(255, 255, 255));
        pnContainMessChat.setLayout(new java.awt.BorderLayout());

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setBorder(null);

        taViewMesage.setEditable(false);
        taViewMesage.setBackground(new java.awt.Color(241, 250, 255));
        taViewMesage.setColumns(20);
        taViewMesage.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        taViewMesage.setForeground(new java.awt.Color(0, 0, 0));
        taViewMesage.setLineWrap(true);
        taViewMesage.setWrapStyleWord(true);
        taViewMesage.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        taViewMesage.setMargin(new java.awt.Insets(0, 13, 0, 13));
        jScrollPane4.setViewportView(taViewMesage);

        pnContainMessChat.add(jScrollPane4, java.awt.BorderLayout.CENTER);

        pnManageTypeChat.setBackground(new java.awt.Color(255, 255, 255));
        pnManageTypeChat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        pnManageTypeChat.setLayout(new java.awt.BorderLayout());

        taInputMessage.setBackground(new java.awt.Color(255, 255, 255));
        taInputMessage.setColumns(20);
        taInputMessage.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        taInputMessage.setLineWrap(true);
        taInputMessage.setWrapStyleWord(true);
        taInputMessage.setMargin(new java.awt.Insets(8, 5, 5, 5));
        taInputMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taInputMessageKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taInputMessageKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(taInputMessage);

        pnManageTypeChat.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        lbSent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbSent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8-sent-48.png"))); // NOI18N
        lbSent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lbSent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbSentMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbSentMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbSentMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout pnManageMessChatLayout = new javax.swing.GroupLayout(pnManageMessChat);
        pnManageMessChat.setLayout(pnManageMessChatLayout);
        pnManageMessChatLayout.setHorizontalGroup(
            pnManageMessChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnManageMessChatLayout.createSequentialGroup()
                .addGroup(pnManageMessChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnManageMessChatLayout.createSequentialGroup()
                        .addComponent(pnManageTypeChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(lbSent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnContainMessChat, javax.swing.GroupLayout.PREFERRED_SIZE, 989, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnManageMessChatLayout.setVerticalGroup(
            pnManageMessChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnManageMessChatLayout.createSequentialGroup()
                .addComponent(pnContainMessChat, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(pnManageMessChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnManageTypeChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbSent, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
        );

        pnTitleMessenger.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Messenger");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnTitleMessenger.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 30));

        javax.swing.GroupLayout pnMainLayout = new javax.swing.GroupLayout(pnMain);
        pnMain.setLayout(pnMainLayout);
        pnMainLayout.setHorizontalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addComponent(pnSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbNameApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnSiderbarLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnTitleMessenger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnManageMessChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnInfoFriendChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnMainLayout.setVerticalGroup(
            pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnSetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnMainLayout.createSequentialGroup()
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lbNameApp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnInfoFriendChat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(pnMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnMainLayout.createSequentialGroup()
                        .addComponent(pnTitleMessenger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(pnSiderbarLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnManageMessChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(pnMain, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public UserDTO getUser() {
        return this._userDTO;
    }

    public void init() {
        byte[] bytesAvatar = _userDTO.getAvatar();
        this.setPicture(this.lbAvatarUser, bytesAvatar);
        this.lbUserName.setText(_userDTO.getName());
        this._simpleDateFormat = new SimpleDateFormat(pattern);
        _serviceUser = new ServiceUser(_nettyClient.getHandler());
        _serviceMessage = new ServiceMessage(_nettyClient.getHandler());
        _serviceChannel = new ServiceChannel(_nettyClient.getHandler());
        _mapChannel = new ConcurrentHashMap<>();
        _mapChannelMessage = new ConcurrentHashMap<>();
        _serviceChannel.sendMessageGetAllChannel(_token);

//        this.AddChannelTest();
    }

    public void addChannel(ChannelDTO channel) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                addChannelToListChannels(channel);
                setChannelActive(listChannel.getLastVisibleIndex());
                taViewMesage.setText("");
            }
        });
    }

    public ConcurrentHashMap<String, ChannelDTO> getMapChannel() {
        return _mapChannel;
    }

    public DefaultListModel<ChannelDTO> getListChannelModel() {
        return this._listsChannelModel;
    }

    public JList<ChannelDTO> getJListChannel() {
        return this.listChannel;
    }

    public void addChannelToListChannels(ChannelDTO channel) {
        _mapChannel.put(channel.getChannelName(), channel);
        _listsChannelModel.addElement(channel);
        _mapChannelMessage.put(channel.getChannelName(), new LinkedHashSet<>());
    }
//    
//    public void addChannelTest(){
//        this.listChannel.setModel(_listsChannelModel);
//        for(int i = 0; i < 100; i++){
//            ChannelDTO channel = new ChannelDTO("tai", "taideptrai" + i, this._userDTO.getAvatar(), "tai, thinh", 10);
//            this.addChannelToListChannels(channel);
//        }    
//        this.listChannel.setCellRenderer(new InforLine());
//    }

    public void setChannelActive(int vt) {
        if (_listsChannelModel.getSize() != 0) {
            this.listChannel.setSelectedIndex(vt);
            _channelNameActicve = this.listChannel.getSelectedValue().getChannelName();
            setPicture(lbAvatarChannelChat, getChannelActive().getAvatar());
            this.lbChannelChat.setText(getChannelActive().getChannelName());
        } else {
            _channelNameActicve = "";
        }
        this.taViewMesage.setText("");
    }

    public ChannelDTO getChannelActive() {
        return _mapChannel.get(_channelNameActicve);    
    }

    public void setPicture(JLabel label, byte[] avatar) {
        if (avatar != null) {
            Image img = new ImageIcon(avatar).getImage().
                    getScaledInstance(label.getSize().width, label.getSize().height, BufferedImage.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(img);
            label.setIcon(icon);
            label.setText("");
        } else {
            label.setText("Choose Avatar");
        }
    }

    public void lineMessageView(MessageDTO messageDTO) {
        String userSend;
        Date date;
        String dateFormat;
        userSend = messageDTO.getUserSend();
        date = new Date(Long.parseLong(messageDTO.getTimeSend()));
        dateFormat = this._simpleDateFormat.format(date);
        if (messageDTO.getUserSend().equals(_nettyClient.getUserName())) {
            userSend = "You";
        }
        this.taViewMesage.append("[" + userSend + "]: \n" + "   " + messageDTO.getBody() + "\n" + "  <" + dateFormat + ">" + "\n\n");
        this.taViewMesage.setCaretPosition(this.taViewMesage.getDocument().getLength());
    }

    public void addMessageInChannel(MessageDTO messageDTO) {
        LinkedHashSet<MessageDTO> setMessages = _mapChannelMessage.get(messageDTO.getChannelName());
        setMessages.add(messageDTO);
        _mapChannelMessage.put(messageDTO.getChannelName(), setMessages);
        if (_channelNameActicve.equals(messageDTO.getChannelName())) {
            lineMessageView(messageDTO);
        }
    }

    public void loadMessageInView(String channelName) {
        LinkedHashSet<MessageDTO> setMessages = _mapChannelMessage.get(channelName);
        for (MessageDTO message : setMessages) {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    lineMessageView(message);
                }
            });
        }
    }

    public void getAllMessageChannelActive() {
        if (!_channelNameActicve.equals("")) {
            _serviceMessage.sendMessageGetAllMessageChannel(_token, _channelNameActicve);
        }
    }

    private void lbExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbExitMouseClicked
        if (JOptionPane.showConfirmDialog(this,
                "Are you sure to exit Smile Alo?", "Really Closing?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
        Border border = BorderFactory.createEmptyBorder();
        lbExit.setBorder(border);
    }//GEN-LAST:event_lbExitMouseClicked

    private void lbMiniWindowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMiniWindowMouseClicked
        Border border = BorderFactory.createEmptyBorder();
        lbMiniWindow.setBorder(border);
        this.setState(AppChatGUI.ICONIFIED);
    }//GEN-LAST:event_lbMiniWindowMouseClicked

    private void lbExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbExitMouseEntered
        Border border = BorderFactory.createLineBorder(Color.RED, 2);
        lbExit.setBorder(border);
    }//GEN-LAST:event_lbExitMouseEntered

    private void lbExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbExitMouseExited
        Border border = BorderFactory.createEmptyBorder();
        lbExit.setBorder(border);
    }//GEN-LAST:event_lbExitMouseExited

    private void lbMiniWindowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMiniWindowMouseEntered
        Border border = BorderFactory.createLineBorder(Color.RED, 2);
        lbMiniWindow.setBorder(border);
    }//GEN-LAST:event_lbMiniWindowMouseEntered

    private void lbMiniWindowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMiniWindowMouseExited
        Border border = BorderFactory.createEmptyBorder();
        lbMiniWindow.setBorder(border);
    }//GEN-LAST:event_lbMiniWindowMouseExited

    private void lbCreateRoomMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCreateRoomMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 2);
        lbCreateRoom.setBorder(border);
    }//GEN-LAST:event_lbCreateRoomMouseEntered

    private void lbCreateRoomMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCreateRoomMouseExited
        Border border = BorderFactory.createEmptyBorder();
        lbCreateRoom.setBorder(border);
    }//GEN-LAST:event_lbCreateRoomMouseExited

    private void lbLogOutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogOutMouseEntered
        Border border = BorderFactory.createLineBorder(Color.WHITE, 2);
        lbLogOut.setBorder(border);
    }//GEN-LAST:event_lbLogOutMouseEntered

    private void lbLogOutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogOutMouseExited
        Border border = BorderFactory.createEmptyBorder();
        lbLogOut.setBorder(border);
    }//GEN-LAST:event_lbLogOutMouseExited

    private void lbCreateRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCreateRoomMouseClicked
        CreateRoomFormGUI createRoomDiaGUI = new CreateRoomFormGUI(this, true, _nettyClient, _token);
        createRoomDiaGUI.setVisible(true);

    }//GEN-LAST:event_lbCreateRoomMouseClicked

    private void tfFindRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFindRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfFindRoomActionPerformed

    private void listChannelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listChannelMouseClicked
        this.setChannelActive(this.listChannel.getSelectedIndex());
        if (_mapChannel.get(_channelNameActicve).isCheckClick()) {
            this.loadMessageInView(_channelNameActicve);
        } else {
            _serviceMessage.sendMessageGetAllMessageChannel(_token, _channelNameActicve);
        }
    }//GEN-LAST:event_listChannelMouseClicked

    private void lbLogOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogOutMouseClicked
        //logout
        _serviceUser.sendMessageLogout(_token);
    }//GEN-LAST:event_lbLogOutMouseClicked

    private void taInputMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taInputMessageKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String body = this.taInputMessage.getText().trim();
            if (!body.equals("")) {
                _serviceMessage.sendMessageChat(_token, _channelNameActicve, _nettyClient.getUserName(), body);
                this.taInputMessage.setText("");
            }
        }
    }//GEN-LAST:event_taInputMessageKeyPressed

    private void taInputMessageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taInputMessageKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.taInputMessage.setText("");
        }
    }//GEN-LAST:event_taInputMessageKeyReleased

    private void lbSentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbSentMouseClicked
        String body = this.taInputMessage.getText().trim();
        if (!body.equals("")) {
            _serviceMessage.sendMessageChat(_token, _channelNameActicve, _nettyClient.getUserName(), body);
            this.taInputMessage.setText("");
        }
    }//GEN-LAST:event_lbSentMouseClicked

    private void lbSentMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbSentMouseEntered
        Border border = BorderFactory.createLineBorder(Color.GRAY, 2);
        this.lbSent.setBorder(border);
    }//GEN-LAST:event_lbSentMouseEntered

    private void lbSentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbSentMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.lbSent.setBorder(border);
    }//GEN-LAST:event_lbSentMouseExited

    private void lbFindRoomMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFindRoomMouseEntered
        Border border = BorderFactory.createLineBorder(Color.GRAY, 2);
        lbFindRoom.setBorder(border);
    }//GEN-LAST:event_lbFindRoomMouseEntered

    private void lbFindRoomMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFindRoomMouseExited
        Border border = BorderFactory.createEmptyBorder();
        this.lbFindRoom.setBorder(border);
    }//GEN-LAST:event_lbFindRoomMouseExited

    public int findIndexChannelInListChannel(String channelName){
       Enumeration<ChannelDTO> list = this._listsChannelModel.elements();
       int i = 0;
       while(list.hasMoreElements()){
           if(list.nextElement().getChannelName().equals(channelName)){
               return i;
           }
           i++;
       }
       return -1;
    }
    
    private void lbFindRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFindRoomMouseClicked
        String channelName = this.tfFindRoom.getText().trim();
        if(!channelName.equals("")){
            if(_mapChannel.get(channelName) != null){
                int index = this.findIndexChannelInListChannel(channelName);
                this.setChannelActive(index);
                if (_mapChannel.get(_channelNameActicve).isCheckClick()) {
                    this.loadMessageInView(_channelNameActicve);
                } else {
                    _serviceMessage.sendMessageGetAllMessageChannel(_token, _channelNameActicve);
                }
            } 
        } 
        this.tfFindRoom.setText("");
    }//GEN-LAST:event_lbFindRoomMouseClicked

    private void tfFindRoomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfFindRoomKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String channelName = this.tfFindRoom.getText().trim();
            if(!channelName.equals("")){
                if(_mapChannel.get(channelName) != null){
                    int index = this.findIndexChannelInListChannel(channelName);
                    this.setChannelActive(index);
                    if (_mapChannel.get(_channelNameActicve).isCheckClick()) {
                        this.loadMessageInView(_channelNameActicve);
                    } else {
                        _serviceMessage.sendMessageGetAllMessageChannel(_token, _channelNameActicve);
                    }
                } 
            } 
            this.tfFindRoom.setText("");
        }
    }//GEN-LAST:event_tfFindRoomKeyPressed

    public void initLoginForm() {
        LoginFormGUI signinGUI = new LoginFormGUI(_nettyClient);
        signinGUI.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppChatGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppChatGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbAvatarChannelChat;
    private javax.swing.JLabel lbAvatarUser;
    private javax.swing.JLabel lbChannelChat;
    private javax.swing.JLabel lbCreateRoom;
    private javax.swing.JLabel lbExit;
    private javax.swing.JLabel lbFindRoom;
    private javax.swing.JLabel lbLogOut;
    private javax.swing.JLabel lbMiniWindow;
    private javax.swing.JPanel lbNameApp;
    private javax.swing.JLabel lbSent;
    private javax.swing.JLabel lbUserName;
    private javax.swing.JList<ChannelDTO> listChannel;
    private javax.swing.JPanel pnContainMessChat;
    private javax.swing.JPanel pnInfoFriendChat;
    private javax.swing.JPanel pnMain;
    private javax.swing.JPanel pnManageMessChat;
    private javax.swing.JPanel pnManageTypeChat;
    private javax.swing.JPanel pnSetting;
    private javax.swing.JPanel pnSiderbarLeft;
    private javax.swing.JPanel pnTitleMessenger;
    private javax.swing.JTextArea taInputMessage;
    private javax.swing.JTextArea taViewMesage;
    private javax.swing.JTextField tfFindRoom;
    // End of variables declaration//GEN-END:variables
}
